/*!
 *
 * GeoCanAut tools / Outil GÃ©oCanAut
 * geocanaut.github.io/geocanaut/License-eng.txt / geocanaut.github.io/geocanaut/Licence-fra.txt
 *
 *  Project header view model widget
 */
(function(){define(["jquery-private","knockout","gcaut-i18n","gcaut-ko","gcaut-vm-map","gcaut-vm-header"],function(g,h,i,e,b,c){var d,f,a;d=function(k){var j=function(p){var l=this,m=locationPath+"gcaut/images/projNew.png",n=locationPath+"gcaut/images/projOpen.png",q=locationPath+"gcaut/images/projDelete.gif",o=locationPath+"gcaut/images/projRestore.gif";l.imgNew=m;l.imgOpen=n;l.imgDelete=q;l.imgRestore=o;l.headerLabel=i.getDict("%projheader-title");l.newLabel=i.getDict("%projheader-newlabel");l.mapLabel=i.getDict("%map")+": ";l.mapsLabel=h.observable(" "+i.getDict("%of")+" "+i.getDict("%map")+"(s)");l.tpNew=i.getDict("%projheader-tpnewmap");l.tpOpen=i.getDict("%projheader-tpopenmap");l.tpDelete=i.getDict("%projheader-tpdeletemap");l.tpRestore=i.getDict("%projheader-tprestoremap");l.maps=[];l.mapsRestore=[];l.mapsID=h.observableArray([]);l.mapsIDValue=h.observable();l.init=function(){return{controlsDescendantBindings:true}};l.openMap=function(){var u=event.target.files,s=u.length,t,r;while(s--){t=u[s];r=new FileReader();r.onerror=function(v){console.log(i.getDict("%msg-configerr"))};r.onload=(function(v){return function(x){try{var w=JSON.parse(x.target.result);l.initMap(w,w.gcaut.name)}catch(x){console.log(i.getDict("%msg-configerr"))}}})(t);r.readAsText(t)}};l.newMap=function(){l.readConfig(locationPath+"src/js/templates/default.json")};l.deleteMap=function(){};l.restoreMap=function(){};l.readConfig=function(r){g.support.cors=true;g.ajax({url:r,crossDomain:true,dataType:"json",async:false,success:function(s){l.initMap(s,"default template")},error:function(){console.log(i.getDict("%msg-configerr")+": "+r)}})};l.initMap=function(t,s){var v=l.maps.length+1,u={},r=t.gcviz;u.map=b.initialize(document.getElementById("map"),r.mapframe);u.header=c.initialize(document.getElementById("headerMap"),r.header);l.maps.push(u);l.mapsID.push(v);l.mapsIDValue(v);l.mapsLabel(" "+i.getDict("%of")+" "+l.mapsID().length+" "+i.getDict("%map")+"(s)");console.log(i.getDict("%msg-configread")+": "+s)};l.mapsIDValue.subscribe(function(r){l.maps[r-1].map.clean();l.maps[r-1].header.clean()});l.init()};a=new j(k);h.applyBindings(a,k)};return{initialize:d}})}).call(this);