@import "compass/css3/images";

$img-root: "images/";
$img-spritebtn: "images/spriteButton.png";

$font: Verdana, Arial, Helvetica, sans-serif;
$orange: #EFA23E;
$yellow: #FAFA0A;
$red: #EF300A;
$app-strong: #AAAAAA;
$app-light: #DDDDDD;
$tb-strong: #D2EDFF;
$tb-light: #FFF;
$disabled-light: #98B8CC;
$disabled-strong: #728A99;
$text-color: #000 !default;

$gray: #545454;

$base-classname: "gcaut";

// the rem base factor if the root font-size element is set to something different then 62.5%
//font-size: 62.5%; // 1 rem = 10px
$rembase: 0.625; // 100% come from WET, they set body to 80% if we put html to 62.5% it will screw up their css

// responsive grid (http://viget.com/inspire/building-a-nested-responsive-grid-with-sass-compass)
$cols: 12;
$gutter: 2%;
$one_col: (100% - ($gutter * ($cols - 1))) / $cols;

@mixin cols($num) {
    width: ($one_col * $num) + ($gutter * ($num - 1));
}

@mixin sub_cols($num_child, $num_parent) {
    $parent_size: ($one_col * $num_parent) + ($gutter * ($num_parent - 1));
    $child_size: ($one_col * $num_child) + ($gutter * ($num_child - 1));
    margin-left: ($gutter / $parent_size) * 100%;
    width: ($child_size / $parent_size) * 100%;
}

@mixin app-gradiant {
    background-color: $app-strong; // old browsers
    @include background-image(linear-gradient(top,  $app-strong 0%, $app-light 100%));
}

@mixin app-gradiant-reverse {
    background-color: $app-strong; // old browsers
    @include background-image(linear-gradient(top,  $app-light 0%, $app-strong 100%));
}

@mixin app-background-image {
    background-size: 100% 100%;
    background-repeat: repeat-x;
    background-image: url("images/headGreybar.png");
}

// buttons sprite
@mixin sprite($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
    background: url($url) $x + px $y + px $repeat;
    display: inline;
    cursor: pointer;
    border: none;
    margin-top: (0.5 * $rembase) + rem;
    margin-bottom: (0.5 * $rembase) + rem;
    height: ($size * $rembase) + rem;
    width: ($size * $rembase) + rem;
    position: relative;
    vertical-align: bottom;

  &:hover {
    background-position: $x + px $y - 36 + px;
  }

  &:focus {
    background-position: $x + px $y - 36 + px;
  }

  &:disabled {
    background-position: $x + px $y - 72 + px;
    cursor: none;
  }
}

@mixin spritenostates($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
  background: url($url) $x + px $y + px $repeat;
  display: inline;
  cursor: default;
  border: none;
  margin-top: (0.5 * $rembase) + rem;
  margin-bottom: (0.5 * $rembase) + rem;
  height: ($size * $rembase) + rem;
  width: ($size * $rembase) + rem;
  position: relative;
    vertical-align: bottom;
}

@mixin spritenohover($url, $x, $y, $size: 3.2, $repeat: no-repeat) {
  @include sprite($url, $x, $y, $size: 3.2, $repeat: no-repeat);

  &:hover {
    background-position: $x + px $y + px;
  }

  &:focus {
    background-position: $x + px $y + px;
  }

  &:disabled {
    background-position: $x + px $y + px;
    cursor: none;
  }
}

@mixin button-gradiant-hover {
  @include background-image(-ms-radial-gradient(center, circle closest-corner, $yellow 0%, $orange 100%)); /* IE10 Consumer Preview */
  @include background-image(-moz-radial-gradient(center, circle closest-corner, $yellow 0%, $orange 100%)); /* Mozilla Firefox */
  @include background-image(-o-radial-gradient(center, circle closest-corner, $yellow 0%, $orange 100%)); /* Opera */
  @include background-image(-webkit-gradient(radial, center center, 0, center center, 497, color-stop(0, $yellow), color-stop(1, $orange))); /* Webkit (Safari/Chrome 10) */
  @include background-image(-webkit-radial-gradient(center, circle closest-corner, $yellow 0%, $orange 100%)); /* Webkit (Chrome 11+) */
  @include background-image(radial-gradient(circle closest-corner at center, $yellow 0%, $orange 100%)); /* W3C Markup, IE10 Release Preview */
  background-color: $tb-light; // old browsers
}

@mixin button-gradiant-active {
  @include background-image(-ms-radial-gradient(center, circle closest-corner, $yellow 0%, $red 100%)); /* IE10 Consumer Preview */
  @include background-image(-moz-radial-gradient(center, circle closest-corner, $yellow 0%, $red 100%)); /* Mozilla Firefox */
  @include background-image(-o-radial-gradient(center, circle closest-corner, $yellow 0%, $red 100%)); /* Opera */
  @include background-image(-webkit-gradient(radial, center center, 0, center center, 497, color-stop(0, $yellow), color-stop(1, $red))); /* Webkit (Safari/Chrome 10) */
  @include background-image(-webkit-radial-gradient(center, circle closest-corner, $yellow 0%, $red 100%)); /* Webkit (Chrome 11+) */
  @include background-image(radial-gradient(circle closest-corner at center, $yellow 0%, $red 100%)); /* W3C Markup, IE10 Release Preview */
  background-color: $tb-light; // old browsers
}

@mixin button-gradiant-disable {
    @include background-image(-ms-radial-gradient(center, circle closest-corner, $disabled-light 0%, $disabled-strong 100%)); /* IE10 Consumer Preview */
  @include background-image(-moz-radial-gradient(center, circle closest-corner, $disabled-light 0%, $disabled-strong 100%)); /* Mozilla Firefox */
  @include background-image(-o-radial-gradient(center, circle closest-corner, $disabled-light 0%, $disabled-strong 100%)); /* Opera */
  @include background-image(-webkit-gradient(radial, center center, 0, center center, 497, color-stop(0, $disabled-light), color-stop(1, $disabled-strong))); /* Webkit (Safari/Chrome 10) */
  @include background-image(-webkit-radial-gradient(center, circle closest-corner, $disabled-light 0%, $disabled-strong 100%)); /* Webkit (Chrome 11+) */
  @include background-image(radial-gradient(circle closest-corner at center, $disabled-light 0%, $disabled-strong 100%)); /* W3C Markup, IE10 Release Preview */
  background-color: $tb-light; // old browsers
}

@mixin content-border-radius($radius: 0.5, $moz: true, $webkit: true, $ms: true, $o: true) {
    @if $moz    { -moz-border-radius: ($radius * $rembase) + rem; }
  @if $webkit { -webkit-border-radius: ($radius * $rembase) + rem; }
  @if $ms     { -ms-border-radius: ($radius * $rembase) + rem; }
  @if $ms     { -o-border-radius: ($radius * $rembase) + rem; }
  border-radius: ($radius * $rembase) + rem;
}

@mixin app-text($size: 1.2, $weight: normal, $color: $text-color) {
    font: {
        family: $font;
        weight: $weight;
        size: ($size * 10) + px; // old browsers
        size: ($size * $rembase) + rem;
    }
    color: $color;
}

@mixin app-head-foot() {
    width: 100%;
    height: (4 * $rembase) + rem;
    text-align: center;
}

@mixin gcaut-border($size: 0.2, $color: #bdbdbd) {
    border-style: solid;
    border-color: $color;
    border-width: ($size * $rembase) + rem;
    padding: (0.5 * $rembase) + rem;
}
